local KeyGuardLibrary = loadstring(game:HttpGet("https://cdn.keyguardian.org/library/v1.0.0.lua"))()
local trueData = "5863eaf039534f8dbef8f6a07f4c1451"
local falseData = "489bfb9145c2466c8dcb6be98f5be24d"

KeyGuardLibrary.Set({
    publicToken = "e81634203bed456b988fde9357a2b444",
    privateToken = "e6c8dd48379549cf90cbfa04828d2d0f",
    trueData = trueData,
    falseData = falseData,
})

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local key = ""

local Window = Fluent:CreateWindow({
    Title = "Key System",
    SubTitle = "RobloXploit",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 340),
    Acrylic = false,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    KeySys = Window:AddTab({ Title = "Key System", Icon = "key" }),
}

local Entkey = Tabs.KeySys:AddInput("Input", {
    Title = "Enter Key",
    Description = "Enter your key here",
    Default = "",
    Placeholder = "Enter your key...",
    Numeric = false,
    Finished = false,
    Callback = function(Value)
        key = Value
    end
})

local Checkkey = Tabs.KeySys:AddButton({
    Title = "Check Key",
    Description = "Ensure you've entered the key before pressing this button",
    Callback = function()
        local response = KeyGuardLibrary.validateDefaultKey(key)
        if response == trueData then
            print("Key is valid")
            Fluent:Notify({
                Title = "Key Validation",
                Content = "The key you entered is valid!",
                SubContent = "You may now proceed.",
                Duration = 5
            })
    -- your script
loadstring(game:HttpGet("https://raw.githubusercontent.com/Slimexiuem/script/refs/heads/main/kaitun-blox"))()
            -- Destroy window after the key is validated
            Window:Destroy()
        else
            print("Key is invalid")
            Fluent:Notify({
                Title = "Key Validation",
                Content = "The key you entered is invalid!",
                SubContent = "Please try again or obtain a new key.",
                Duration = 5
            })
        end
    end
})

local Getkey = Tabs.KeySys:AddButton({
    Title = "Get Key",
    Description = "Click to copy the key retrieval link",
    Callback = function()
        setclipboard(KeyGuardLibrary.getLink())
        Fluent:Notify({
            Title = "Key Retrieval",
            Content = "The key retrieval link has been copied to your clipboard.",
            SubContent = "Use it to get a valid key.",
            Duration = 5
        })
    end
})

Window:SelectTab(1)
